{% use '../CommonAdmin/security_action.php.twig' %}
{% use '../CommonAdmin/csrf_protection.php.twig' %}
{% block index %}

    public function indexAction($pk)
    {
        try {
            ${{ builder.ModelClass }} = $this->getObject($pk);

            {{ block('security_action_with_object') }}

            if ('POST' == $this->get('request')->getMethod()) {
                {{ block('csrf_action_check_token') }}
                $this->preRemove(${{ builder.ModelClass }});
                $this->process(${{ builder.ModelClass }});
                $this->postRemove(${{ builder.ModelClass }});
                $this->get('session')->getFlashBag()->add('success', $this->get('translator')->trans("{{ messages.success is defined ? messages.success : "action.batch.delete.success" }}", array(), 'Admingenerator') );
                return new RedirectResponse($this->generateUrl("{{ builder.routePrefixWithSubfolder }}_{{ bundle_name }}{{ builder.BaseGeneratorName ? "_" ~ builder.BaseGeneratorName : "" }}_list"));
            }
        } catch (AccessDeniedException $e) {
            throw $e;
        } catch (\Exception $e) {
            $this->get('session')->getFlashBag()->add('error', $this->get('translator')->trans("{{ messages.error is defined ? messages.error : "action.batch.delete.error" }}", array(), 'Admingenerator') );
            $this->onException($e, ${{ builder.ModelClass }});
            return new RedirectResponse($this->generateUrl("{{ builder.routePrefixWithSubfolder }}_{{ bundle_name }}{{ builder.BaseGeneratorName ? "_" ~ builder.BaseGeneratorName : "" }}_list"));
        }

        return $this->render('{{ namespace_prefix }}{{ bundle_name }}:{{ builder.BaseGeneratorName }}Delete:index.html.twig', $this->getAdditionalRenderParameters(${{ builder.ModelClass }}) + array(
            "{{ builder.ModelClass }}" => ${{ builder.ModelClass }}
        ));
    }

    /**
    * This method is here to make your life better, so overwrite  it
    *
    * @param \Exception $exception throwed exception
    * @param \{{ model }} ${{ builder.ModelClass }} your \{{ model }} object
    */
    public function onException(\Exception $exception, \{{ model }} ${{ builder.ModelClass }})
    {
    }

    /**
    * This method is here to make your life better, so overwrite it
    *
    * @param \{{ model }} ${{ builder.ModelClass }} your \{{ model }} object
    */
    public function preRemove(\{{ model }} ${{ builder.ModelClass }})
    {
    }

    /**
    * This method is here to make your life better, so overwrite it
    *
    * @param \{{ model }} ${{ builder.ModelClass }} your \{{ model }} object
    */
    public function postRemove(\{{ model }} ${{ builder.ModelClass }})
    {
    }
{% endblock %}
