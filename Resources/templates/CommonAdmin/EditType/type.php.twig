{% block type %}
<?php

namespace Admingenerated\{{ namespace_prefix }}{{ bundle_name }}\Form\Base{{ builder.BaseGeneratorName }}Type;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use JMS\SecurityExtraBundle\Security\Authorization\Expression\Expression;

class {{ builder.YamlKey|ucfirst }}Type extends AbstractType
{
    protected $securityContext;

    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        {% for column in builder.columns %}
        {%- if column.credentials -%}
        if (false !== $this->securityContext->isGranted(array(new Expression('{{ column.credentials }}')))) {
        {%- endif %}
        
          {% set columnType = column.formType|as_php|convert_as_form('form_widget') %}
          {% set columnOptions = column.formOptions %}
              {% if column.label is defined %}{% set columnOptions = columnOptions|merge({'label': column.label}) %}{% endif %}
              {% if column.help is defined %}{% set columnOptions = columnOptions|merge({'help': column.help}) %}{% endif %}
              {% set columnOptions = columnOptions|merge({'translation_domain': i18n_catalog|default('Admin')}) %}
          {% set columnOptions = columnOptions|as_php|convert_as_form(column.formType) %}

           $builder->add('{{ column.name }}', {{ columnType }}, {{ columnOptions }});
           
        {% if column.credentials %}
        }

        {%- endif -%}
        {%- endfor %}

    }

    public function getName()
    {
        return '{{ builder.YamlKey }}_{{ builder.ModelClass|lower }}';
    }

    public function setSecurityContext($securityContext)
    {
        $this->securityContext = $securityContext;
    }

}
{% endblock %}
